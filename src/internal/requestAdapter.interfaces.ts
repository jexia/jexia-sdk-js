/* List of allowed methods */
export enum RequestMethod {
  GET = "GET",
  POST = "POST",
  PUT = "PUT",
  PATCH = "PATCH",
  DELETE = "DELETE",
  OPTIONS = "OPTIONS",
}

export interface IRequestOptions extends RequestInit {
  body?: any;
}

export interface IHTTPResponse {
  ok: boolean;
  status: number;
  statusText: string;
  text(): Promise<string>;
}

export type Fetch = (url: string, init?: IRequestOptions) => Promise<IHTTPResponse>;

/**
 * Error from the API
 * @property id {string} Unique request id generated by server. Used for debugging issues
 * @property request {IRequestOptions} Original request options
 * @property httpStatus {{code: number}, {status: string}} Http status and code
 * @property message {string} Human readable error description
 */
export interface IRequestError {
  id?: string;
  request: IRequestOptions;
  httpStatus: {code: number; status: string};
  message?: string;
}
